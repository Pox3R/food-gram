from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

from orderinfo import OrderInfo
import random
import photo_proc


# —Ç–æ–∫–µ–Ω  –±–æ—Ç–∞
API_TOKEN = '1056772125:AAFQrxSVgSzMO3Ihc9Rb3n4Uqm9pYZAa5NQ'
# —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
bot.parse_mode = 'HTML'
dp = Dispatcher(bot)

# order_chats[id —á–∞—Ça –∑–∞–∫–∞–∑–∞][id —Ç–æ–≥–æ –∫—Ç–æ –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç]=—á—Ç–æ –æ–Ω –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç
order_chats = {}  # –≤—Å–µ —á–∞—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –∑–∞–∫–∞–∑
starter = {}  # —Ç–µ –∫—Ç–æ –Ω–∞—á–∏–Ω–∞—é—Ç —á–∞—Ç (–∫–ª–∞—Å—Å OrderInfo)
# –º–∞—Å—Å–∏–≤—ã –≤—ã—à–µ –º–± –º–æ–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å (–ø–æ —Å—É—Ç–∏ - —ç—Ç–æ –≤ –±–¥ –ø–æ—ç—Ç–æ–º—É –Ω–µ –≤–∞–∂–Ω–æ –∫–∞–∫ –æ–Ω–æ –∑–¥–µ—Å—å)

# –∫–æ—Å—Ç—ã–ª–∏:
order_enable = 0
photo_enable = 0

# kod[chat_id] = n-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥?
kod = {}

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def if_start(message: types.Message):

    global order_chats

    # –µ—Å–ª–∏ —Å—Ç–∞—Ä—Ç –ø–∏—à–µ—à—å –≤ –ª–∏—á–∫—É –±–æ—Ç—É
    if message.chat.type == 'private':
        message_text = "%s, –ø—Ä–∏–≤–µ—Ç. " \
                       "–ö–æ–º–∞–Ω–¥–∞ /help –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –∫–∞–∫ —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç" % message.from_user.first_name
        await bot.send_message(message.chat.id, message_text)
        return

    # –∫–æ–≥–¥–∞ —Å—Ç–∞—Ä—Ç –±—ã–ª –Ω–∞–∂–∞—Ç —É–∂–µ –∫–µ–º-—Ç–æ
    if message.chat.id in order_chats:
        message_text = "%s! –ó–∞–∫–∞–∑ —É–∂–µ –¥–µ–ª–∞–µ—Ç—Å—è! –ù–µ —Ö—É–ª–∏–≥–∞–Ω—å. üò†" % message.from_user.first_name
        await bot.send_message(message.chat.id, message_text)
        return

    # –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å—Ç–∞—Ä—Ç–µ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —á–∞—Ç, –Ω–∞–∑–Ω–∞—á–∞–µ–º –≥–ª–∞–≤–Ω–æ–≥–æ
    order_chats[message.chat.id] = {}
    starter[message.chat.id] = OrderInfo(message) # –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –ø–æ—Ç–æ–º
    message_text = "–ü—Ä–∏–≤–µ—Ç, –±—É–¥–µ–º –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å\n" \
                   "<b>%s</b> - –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞, –±—É–¥–µ—Ç –∏–º–µ—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∞ –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏. " \
                   "–ü–∏—à–∏—Ç–µ –º–µ—Å—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π" % message.from_user.first_name
    await bot.send_message(message.chat.id, message_text)

    # –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω–æ–≥–æ —á—Ç–æ –æ–Ω –≥–ª–∞–≤–Ω—ã–π
    message_text = "–ü—Ä–∏–≤–µ—Ç, %s! –¢—ã —Ä–µ—à–∏–ª —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –≤ —á–∞—Ç–µ %s \n üòé " % (message.from_user.first_name, message.chat.title)
    await bot.send_message(message.from_user.id, message_text)

    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥
    kod[message.chat.id] = random.randint(1000, 9999)  # –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –ø–æ—Ç–æ–º


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /makeorder
@dp.message_handler(commands=['makeorder'])
async def if_makeorder(message: types.Message):

    global order_chats

    # –ø–æ–ª—å–∑-–ª—å —É–∂–µ –∂–∞–ª makeorder
    if message.from_user.id in order_chats[message.chat.id]:
        await bot.send_message(message.from_user.id, '–ó–∞–∫–∞–∑—ã–≤–∞–π –∂–µ!')
        return

    # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–æ–≥–æ –∫—Ç–æ –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç
    order_chats[message.chat.id][message.from_user.id] = {}
    message_text = "<b>%s</b> –¥–µ–ª–∞–µ—Ç –∑–∞–∫–∞–∑" % message.from_user.first_name
    await bot.send_message(message.chat.id, message_text)
    message_text = "–ó–∞–∫–∞–∑ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /eat. " \
                "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ —á–∞—Ç–∞ %s" % kod[message.chat.id]
    await bot.send_message(message.from_user.id, message_text)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /eat & /bill
@dp.message_handler(content_types=['text'])
async def if_message(message: types.Message):

    global order_chats
    global order_enable
    global photo_enable

    # –∫–æ–º–∞–Ω–¥–æ–π eat —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤–≤–æ–¥ –∑–∞–∫–∞–∑–∞ —Ç–µ–∫—Å—Ç–æ–º
    if message.text == '/eat':
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ —á–∞—Ç–µ - –∂–∞–ª makeorder
        for i in order_chats:
            if message.from_user.id in order_chats[i]:
                order_enable = 1
                await bot.send_message(message.from_user.id, '–ü–∏—à–∏ –ø—É–Ω–∫—Ç—ã –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å')
                return
        # –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å—Å–∏–≤–µ
        await bot.send_message(message.from_user.id, "–í–∞—Å –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–∞—Ö! –ñ–º–∏—Ç–µ makeorder –≤ —á–∞—Ç–µ –∑–∞–∫–∞–∑–∞")
        return

    # –∫–æ–º–∞–Ω–¥–æ–π bill —Ä–∞–∑—Ä–µ—à–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ
    elif message.text == '/bill':
        photo_enable = 1
        await bot.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —á–µ–∫–∞\n–§–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–µ—Ç–∫–∏–º')

        # –µ—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç—É–ø–∏–ª —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º txt_enable
    else:
        if order_enable:
            order_enable = 0
            tmp = 0
            for i in order_chats:
                if message.from_user.id in order_chats[i]:
                    tmp = i
                    break
            for i in range(len(message.text.split())):
                order_chats[tmp][message.from_user.id][i] = message.text.split()[i]
            to_out = []
            for i in order_chats[tmp][message.from_user.id]:
                to_out.append('<b>' + str(i) + '</b> - ' + str(order_chats[tmp][message.from_user.id][i]))
            await bot.send_message(message.from_user.id, "\n".join(to_out))
        else:
            await bot.send_message(message.from_user.id, "/help  ‚¨Ö  –∂–º–∏")


@dp.message_handler(content_types=['photo'])
async def handle_docs_photo(message):
    global photo_enable
    if photo_enable:
        try:
            await photo_proc.qr_decode(message, bot, API_TOKEN)
        except Exception as e:
            await bot.send_message(message.chat.id, e)
    else:
        await bot.send_message(message.chat.id, '–ö —á–µ–º—É —Ç—ã —ç—Ç–æ?', reply_to_message_id=message)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)